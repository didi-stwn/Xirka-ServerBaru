{"ast":null,"code":"var _jsxFileName = \"/home/didisetiawan/Downloads/dd/Xirka-ServerBaru/src/components/content/client.js\";\nimport React, { Component } from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport { Route, Link, withRouter } from \"react-router-dom\";\nimport Daftarclient from './daftarclient';\nimport Editclient from './editclient';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nclass Client extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"client\");\n  } // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     isidata: [],\n  //     editID:'',\n  //     user:'',\n  //     pass:'',\n  //     gagal: false,\n  //   };\n  //   this.handleChange = this.handleChange.bind(this);\n  //   this.handleSubmit = this.handleSubmit.bind(this);\n  // }\n  // handleChange(e) {\n  //   const { name, value } = e.target;\n  //   this.setState({ [name]: value });\n  // }\n  // handleSubmit(e){\n  //     e.preventDefault();\n  //     const {username, password} = this.state\n  //     let h= new Headers()\n  //     h.append ('Authorization', 'Basic ' + btoa(username + ':' + password))\n  //     fetch('https://192.168.2.7/smartlock/api/v1/login/', {\n  //        method: 'GET',\n  //        headers: h\n  //     })\n  //     .then(response => {\n  //         if(response.status === 200) {\n  //             sessionStorage.setItem(\"login\",\"true\")\n  //             window.location.reload();\n  //         }\n  //         else{\n  //             this.setState({gagal:true})\n  //         }\n  //     })\n  // }\n  // deleteData(e,f,g){\n  //   var yes = window.confirm(\"Apakah anda yakin ingin menghapus data berikut: Username = \" +e+\", Password= \"+f+\", Nama Client= \"+g+\" ?\");\n  //   if (yes === true){\n  //     let he= new Headers()\n  //     let token = this.props.token\n  //     he.append ('x-access-token', token)\n  //     fetch('http://192.168.2.7:3000/client/'+e, {\n  //       method: 'delete',\n  //       headers: he \n  //     })\n  //     .then(response=>{\n  //       if (response.ok){\n  //         window.alert(\"Data berhasil dihapus\")\n  //       }\n  //       else{\n  //         window.alert(\"Data tidak berhasil dihapus\")\n  //       }\n  //     })\n  //   }\n  // }\n  // editData(e){\n  //   this.setState({editID:e})\n  // }\n  // componentDidMount(){\n  //   let he= new Headers()\n  //   let token = this.props.token\n  //   he.append ('x-access-token', token)\n  //   fetch('http://192.168.2.7:3000/client', {\n  //     method: 'GET',\n  //     headers: he\n  //   })\n  //   .then(response=>response.json())\n  //   .then(data => this.setState({isidata: data}))\n  // }\n  // refresh(){\n  //   let he= new Headers()\n  //   let token = this.props.token\n  //   he.append ('x-access-token', token)\n  //   fetch('http://192.168.2.7:3000/client', {\n  //     method: 'GET',\n  //     headers: he\n  //   })\n  //   .then(response=>response.json())\n  //   .then(data => this.setState({isidata: data}))\n  // }\n  // render(){\n  //     const {isidata} = this.state;\n  //     var x=1;\n  //     function no(i){\n  //         var m=0\n  //         var hasil=m+i\n  //         return  hasil\n  //     }\n  //     const data = {\n  //     columns: [\n  //       {\n  //         label: 'No',\n  //         field: 'no',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Username',\n  //         field: 'username',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Password',\n  //         field: 'password',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Nama Client',\n  //         field: 'namaclient',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Keterangan',\n  //         field: 'keterangan'\n  //       }\n  //     ],\n  //     rows: isidata.map(isi=>{\n  //       return {\n  //         no:no(x++),\n  //         username:isi.username,\n  //         password:isi.password,\n  //         namaclient:isi.name,\n  //         keterangan:<div className=\"editdelete\"> <Link to=\"/client/edit\" onClick={() => this.editData(isi.username)}><i className=\"fa fa-pencil\"></i></Link> | <a className=\"mousepointer\" onClick={() => this.deleteData(isi.username,isi.password,isi.name)}> <i className=\"fa fa-trash\"></i></a> </div>\n  //         }\n  //         })\n  //     };\n  //     const {editID,gagal}= this.state;\n  //     if (sessionStorage.login===\"true\"){\n  //         return (\n  //             <div>\n  //               <div>\n  //                 <Route path=\"/client/daftar\" render={ () => <Daftarclient token={this.props.token} /> } />\n  //                 <Route path=\"/client/edit\" render={ () => <Editclient token={this.props.token} editID={editID}/> } />\n  //               </div>\n  //               <div className=\"box-footer\">\n  //                   <div className=\"kotakdaftarruangan\">\n  //                       <Link to=\"/client/daftar\">\n  //                         <div className=\"daftar\">\n  //                           <i className=\"fa fa-plus\"></i> \n  //                           <span> Client </span>\n  //                         </div>\n  //                       </Link>\n  //                       <span>\n  //                         <a onClick={() => this.refresh()}>\n  //                           <div className=\"daftar2\">\n  //                             <i className=\"fa fa-refresh\"></i>\n  //                           </div>\n  //                         </a>\n  //                       </span>\n  //                   </div>\n  //                   <div className=\"isitabel\">\n  //                       <MDBDataTable\n  //                       responsive\n  //                       striped\n  //                       bordered\n  //                       hover\n  //                       data={data}\n  //                       /> \n  //                   </div>  \n  //               </div>\n  //             </div>       \n  //         );\n  //     }\n  //     else {\n  //         return(\n  //             <div className=\"loginclientt\">\n  //                 <div className=\"loginclient\">\n  //                     <form  onSubmit={this.handleSubmit}>\n  //                         <h2 className=\"loginnim\">Username</h2>\n  //                         <input className=\"inputnim2\" name=\"username\" placeholder=\"Username\"  onChange={this.handleChange} type=\"text\" required/>\n  //                         <br></br>\n  //                         <h2 className=\"loginpass\">Password</h2>\n  //                         <input className=\"inputpass2\" name=\"password\" placeholder=\"Password\" onChange={this.handleChange} type=\"password\" required/>\n  //                         <br></br>\n  //                         {\n  //                             gagal &&\n  //                             <p className=\"gagallogin2\">*username or password is incorrect</p>\n  //                         }\n  //                         <button className=\"submitform\" type=\"submit\"> \n  //                             <span>\n  //                                 <span>\n  //                                     Login&nbsp;\n  //                                 </span>\n  //                                 <i className=\"fa fa-sign-in\"> \n  //                                 </i>\n  //                             </span>\n  //                         </button>\n  //                     </form>\n  //                 </div>\n  //             </div>\n  //         )\n  //     }   \n  // }\n\n\n}\n\nexport default withRouter(Client);","map":{"version":3,"sources":["/home/didisetiawan/Downloads/dd/Xirka-ServerBaru/src/components/content/client.js"],"names":["React","Component","MDBDataTable","Route","Link","withRouter","Daftarclient","Editclient","Client","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAAQC,KAAR,EAAcC,IAAd,EAAmBC,UAAnB,QAAoC,kBAApC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,+CAAP;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA8B;AAC5BQ,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,GAP2B,CAQ1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAlN0B;;AAoN9B,eAAeJ,UAAU,CAACG,MAAD,CAAzB","sourcesContent":["import React,{Component} from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport {Route,Link,withRouter} from \"react-router-dom\";\nimport Daftarclient from './daftarclient';\nimport Editclient from './editclient';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nclass Client extends Component{\n  render(){\n    return(\n      <div>\n        client\n      </div>\n    )\n  }\n    // constructor(props) {\n    //   super(props);\n    //   this.state = {\n    //     isidata: [],\n    //     editID:'',\n    //     user:'',\n    //     pass:'',\n    //     gagal: false,\n    //   };\n    //   this.handleChange = this.handleChange.bind(this);\n    //   this.handleSubmit = this.handleSubmit.bind(this);\n    // }\n    // handleChange(e) {\n    //   const { name, value } = e.target;\n    //   this.setState({ [name]: value });\n    // }\n    \n    // handleSubmit(e){\n    //     e.preventDefault();\n    //     const {username, password} = this.state\n    //     let h= new Headers()\n    //     h.append ('Authorization', 'Basic ' + btoa(username + ':' + password))\n    //     fetch('https://192.168.2.7/smartlock/api/v1/login/', {\n    //        method: 'GET',\n    //        headers: h\n    //     })\n    //     .then(response => {\n    //         if(response.status === 200) {\n    //             sessionStorage.setItem(\"login\",\"true\")\n    //             window.location.reload();\n    //         }\n    //         else{\n    //             this.setState({gagal:true})\n    //         }\n    //     })\n    // }\n\n    // deleteData(e,f,g){\n    //   var yes = window.confirm(\"Apakah anda yakin ingin menghapus data berikut: Username = \" +e+\", Password= \"+f+\", Nama Client= \"+g+\" ?\");\n    //   if (yes === true){\n    //     let he= new Headers()\n    //     let token = this.props.token\n    //     he.append ('x-access-token', token)\n    //     fetch('http://192.168.2.7:3000/client/'+e, {\n    //       method: 'delete',\n    //       headers: he \n    //     })\n    //     .then(response=>{\n    //       if (response.ok){\n    //         window.alert(\"Data berhasil dihapus\")\n    //       }\n    //       else{\n    //         window.alert(\"Data tidak berhasil dihapus\")\n    //       }\n    //     })\n    //   }\n    // }\n\n    // editData(e){\n    //   this.setState({editID:e})\n    // }\n\n    // componentDidMount(){\n    //   let he= new Headers()\n    //   let token = this.props.token\n    //   he.append ('x-access-token', token)\n    //   fetch('http://192.168.2.7:3000/client', {\n    //     method: 'GET',\n    //     headers: he\n    //   })\n    //   .then(response=>response.json())\n    //   .then(data => this.setState({isidata: data}))\n    // }\n\n    // refresh(){\n    //   let he= new Headers()\n    //   let token = this.props.token\n    //   he.append ('x-access-token', token)\n    //   fetch('http://192.168.2.7:3000/client', {\n    //     method: 'GET',\n    //     headers: he\n    //   })\n    //   .then(response=>response.json())\n    //   .then(data => this.setState({isidata: data}))\n    // }\n\n    \n  \n    // render(){\n    //     const {isidata} = this.state;\n    //     var x=1;\n    //     function no(i){\n    //         var m=0\n    //         var hasil=m+i\n    //         return  hasil\n    //     }\n    //     const data = {\n    //     columns: [\n    //       {\n    //         label: 'No',\n    //         field: 'no',\n    //         sort: 'asc',\n    //       },\n    //       {\n    //         label: 'Username',\n    //         field: 'username',\n    //         sort: 'asc',\n    //       },\n    //       {\n    //         label: 'Password',\n    //         field: 'password',\n    //         sort: 'asc',\n    //       },\n    //       {\n    //         label: 'Nama Client',\n    //         field: 'namaclient',\n    //         sort: 'asc',\n    //       },\n    //       {\n    //         label: 'Keterangan',\n    //         field: 'keterangan'\n    //       }\n    //     ],\n    //     rows: isidata.map(isi=>{\n    //       return {\n    //         no:no(x++),\n    //         username:isi.username,\n    //         password:isi.password,\n    //         namaclient:isi.name,\n    //         keterangan:<div className=\"editdelete\"> <Link to=\"/client/edit\" onClick={() => this.editData(isi.username)}><i className=\"fa fa-pencil\"></i></Link> | <a className=\"mousepointer\" onClick={() => this.deleteData(isi.username,isi.password,isi.name)}> <i className=\"fa fa-trash\"></i></a> </div>\n    //         }\n    //         })\n    //     };\n    //     const {editID,gagal}= this.state;\n    //     if (sessionStorage.login===\"true\"){\n    //         return (\n    //             <div>\n    //               <div>\n    //                 <Route path=\"/client/daftar\" render={ () => <Daftarclient token={this.props.token} /> } />\n    //                 <Route path=\"/client/edit\" render={ () => <Editclient token={this.props.token} editID={editID}/> } />\n    //               </div>\n                   \n    //               <div className=\"box-footer\">\n    //                   <div className=\"kotakdaftarruangan\">\n    //                       <Link to=\"/client/daftar\">\n    //                         <div className=\"daftar\">\n    //                           <i className=\"fa fa-plus\"></i> \n    //                           <span> Client </span>\n    //                         </div>\n    //                       </Link>\n    //                       <span>\n    //                         <a onClick={() => this.refresh()}>\n    //                           <div className=\"daftar2\">\n    //                             <i className=\"fa fa-refresh\"></i>\n    //                           </div>\n    //                         </a>\n    //                       </span>\n    //                   </div>\n    //                   <div className=\"isitabel\">\n    //                       <MDBDataTable\n    //                       responsive\n    //                       striped\n    //                       bordered\n    //                       hover\n    //                       data={data}\n    //                       /> \n    //                   </div>  \n    //               </div>\n    //             </div>       \n    //         );\n    //     }\n    //     else {\n    //         return(\n    //             <div className=\"loginclientt\">\n    //                 <div className=\"loginclient\">\n    //                     <form  onSubmit={this.handleSubmit}>\n    //                         <h2 className=\"loginnim\">Username</h2>\n    //                         <input className=\"inputnim2\" name=\"username\" placeholder=\"Username\"  onChange={this.handleChange} type=\"text\" required/>\n    //                         <br></br>\n\n    //                         <h2 className=\"loginpass\">Password</h2>\n    //                         <input className=\"inputpass2\" name=\"password\" placeholder=\"Password\" onChange={this.handleChange} type=\"password\" required/>\n    //                         <br></br>\n    //                         {\n    //                             gagal &&\n    //                             <p className=\"gagallogin2\">*username or password is incorrect</p>\n    //                         }\n    //                         <button className=\"submitform\" type=\"submit\"> \n    //                             <span>\n    //                                 <span>\n    //                                     Login&nbsp;\n    //                                 </span>\n    //                                 <i className=\"fa fa-sign-in\"> \n    //                                 </i>\n    //                             </span>\n    //                         </button>\n    //                     </form>\n    //                 </div>\n    //             </div>\n    //         )\n    //     }   \n      \n    // }\n}\nexport default withRouter(Client);"]},"metadata":{},"sourceType":"module"}