{"ast":null,"code":"var _jsxFileName = \"/home/didisetiawan/Downloads/dd/Xirka-ServerBaru/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport SideBar from './components/SideBar';\nimport Content from './components/Content';\nimport Login from './components/content/login';\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\nimport './components/content/css/AdminLTE.css';\nimport './components/content/css/_all-skins.min.css';\nimport './components/content/css/font-awesome.css';\nimport './components/content/css/font-awesome.min.css';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nclass App extends Component {\n  render() {\n    //fungsi refresh token\n    function refreshToken() {\n      fetch('http://192.168.2.7:8020/api-token-refresh/', {\n        method: 'post',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          token: sessionStorage.name\n        })\n      }).then(response => response.json()).then(response => {\n        if (response.token === \"This field is required.\") {\n          sessionStorage.removeItem(\"name\");\n        } else {\n          sessionStorage.setItem(\"name\", response.token);\n        }\n      });\n    }\n\n    var a = btoa(sessionStorage.name);\n    console.log(a); // kalau token ga ada\n\n    if (sessionStorage.name === \"undefined\" || sessionStorage.name === undefined) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login\",\n        component: Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    } //kalau token ada\n    else {\n        //fungsi untuk memanggil refresh token 1 detik setelah ada sesuatu yang di klik\n        setTimeout(function () {\n          refreshToken();\n        }, 1000); //fungsi untuk memanggil refresh token tiap 590 detik\n\n        setInterval(function () {\n          refreshToken();\n        }, 590000);\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(Route, {\n          path: \"/\",\n          component: Header,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/\",\n          component: SideBar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/\",\n          component: Content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }));\n      }\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/home/didisetiawan/Downloads/dd/Xirka-ServerBaru/src/App.js"],"names":["React","Component","Header","SideBar","Content","Login","Route","Redirect","withRouter","App","render","refreshToken","fetch","method","headers","body","JSON","stringify","token","sessionStorage","name","then","response","json","removeItem","setItem","a","btoa","console","log","undefined","setTimeout","setInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,EAAyBC,UAAzB,QAA0C,kBAA1C;AACA,OAAO,uCAAP;AACA,OAAO,6CAAP;AACA,OAAO,2CAAP;AACA,OAAO,+CAAP;AACA,OAAO,+CAAP;AACA,OAAO,0CAAP;AACA,OAAO,2BAAP;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AACxBS,EAAAA,MAAM,GAAE;AACN;AACA,aAASC,YAAT,GAAuB;AACnBC,MAAAA,KAAK,CAAC,4CAAD,EAA+C;AAClDC,QAAAA,MAAM,EAAE,MAD0C;AAElDC,QAAAA,OAAO,EAAE;AAAC,0BAAiB;AAAlB,SAFyC;AAGlDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAEC,cAAc,CAACC;AADL,SAAf;AAH4C,OAA/C,CAAL,CAOCC,IAPD,CAOOC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EAPlB,EAQCF,IARD,CAQOC,QAAQ,IAAG;AAClB,YAAIA,QAAQ,CAACJ,KAAT,KAAiB,yBAArB,EAA+C;AAC7CC,UAAAA,cAAc,CAACK,UAAf,CAA0B,MAA1B;AACD,SAFD,MAGI;AACFL,UAAAA,cAAc,CAACM,OAAf,CAAuB,MAAvB,EAA8BH,QAAQ,CAACJ,KAAvC;AACD;AACF,OAfC;AAgBH;;AACD,QAAIQ,CAAC,GAACC,IAAI,CAACR,cAAc,CAACC,IAAhB,CAAV;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ,EArBM,CAuBN;;AACA,QAAKP,cAAc,CAACC,IAAf,KAAsB,WAAvB,IAAsCD,cAAc,CAACC,IAAf,KAAsBU,SAAhE,EAA2E;AACzE,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAEzB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD,KAPD,CASA;AATA,SAUK;AACH;AACA0B,QAAAA,UAAU,CAAC,YAAU;AAACpB,UAAAA,YAAY;AAAG,SAA3B,EAA4B,IAA5B,CAAV,CAFG,CAGH;;AACAqB,QAAAA,WAAW,CAAC,YAAU;AAACrB,UAAAA,YAAY;AAAG,SAA3B,EAA4B,MAA5B,CAAX;AACA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,SAAS,EAAET,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,SAAS,EAAEC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,SAAS,EAAEC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CADF;AAOD;AACJ;;AAhDyB;;AAmD5B,eAAeI,UAAU,CAACC,GAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport Header from './components/Header';\nimport SideBar from './components/SideBar';\nimport Content from './components/Content';\nimport Login from './components/content/login';\nimport {Route, Redirect, withRouter} from \"react-router-dom\";\nimport './components/content/css/AdminLTE.css';\nimport './components/content/css/_all-skins.min.css';\nimport './components/content/css/font-awesome.css';\nimport './components/content/css/font-awesome.min.css';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nclass App extends Component {\n    render(){ \n      //fungsi refresh token\n      function refreshToken(){\n          fetch('http://192.168.2.7:8020/api-token-refresh/', {\n            method: 'post',\n            headers :{\"Content-Type\" : \"application/json\"},\n            body: JSON.stringify({\n                token: sessionStorage.name,\n                })\n          })\n          .then (response =>response.json())  \n          .then (response =>{\n          if (response.token===\"This field is required.\"){\n            sessionStorage.removeItem(\"name\")\n          }\n          else{\n            sessionStorage.setItem(\"name\",response.token)\n          }\n        })\n      }\n      var a=btoa(sessionStorage.name)\n      console.log(a)\n\n      // kalau token ga ada\n      if ((sessionStorage.name===\"undefined\")||(sessionStorage.name===undefined)){\n        return (\n          <div>\n            <Redirect to=\"/login\" />\n            <Route path=\"/login\" component={Login}/>\n          </div>\n        )\n      }\n      \n      //kalau token ada\n      else {\n        //fungsi untuk memanggil refresh token 1 detik setelah ada sesuatu yang di klik\n        setTimeout(function(){refreshToken()},1000)\n        //fungsi untuk memanggil refresh token tiap 590 detik\n        setInterval(function(){refreshToken()},590000)\n        return(\n          <div>\n            <Route path=\"/\" component={Header} />\n            <Route path=\"/\" component={SideBar} />\n            <Route path=\"/\" component={Content} />\n          </div>\n        ) \n      }\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}