{"ast":null,"code":"var _jsxFileName = \"/home/didisetiawan/Downloads/dd/Xirka-ServerBaru/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport SideBar from './components/SideBar';\nimport Content from './components/Content';\nimport Login from './components/content/login';\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\nimport './components/content/css/AdminLTE.css';\nimport './components/content/css/_all-skins.min.css';\nimport './components/content/css/font-awesome.css';\nimport './components/content/css/font-awesome.min.css';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport s from './config';\n\nclass App extends Component {\n  render() {\n    console.log(s.s); //fungsi refresh token\n    // function refreshToken(){\n    //     fetch('http://192.168.2.7:8020/api-token-refresh/', {\n    //       method: 'post',\n    //       headers :{\"Content-Type\" : \"application/json\"},\n    //       body: JSON.stringify({\n    //           token: sessionStorage.name,\n    //           })\n    //     })\n    //     .then (response =>response.json())  \n    //     .then (response =>{\n    //     if (response.token===\"This field is required.\"){\n    //       sessionStorage.removeItem(\"name\")\n    //     }\n    //     else{\n    //       sessionStorage.setItem(\"name\",response.token)\n    //     }\n    //   })\n    // }\n    // // kalau token ga ada\n    // if ((sessionStorage.name===\"undefined\")||(sessionStorage.name===undefined)){\n    //   return (\n    //     <div>\n    //       <Redirect to=\"/login\" />\n    //       <Route path=\"/login\" component={Login}/>\n    //     </div>\n    //   )\n    // }\n    // //kalau token ada\n    // else {\n    //   //fungsi untuk memanggil refresh token 1 detik setelah ada sesuatu yang di klik\n    //   setTimeout(function(){refreshToken()},1000)\n    //   //fungsi untuk memanggil refresh token tiap 590 detik\n    //   setInterval(function(){refreshToken()},590000)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      component: Header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      component: SideBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      component: Content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })); // }\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/home/didisetiawan/Downloads/dd/Xirka-ServerBaru/src/App.js"],"names":["React","Component","Header","SideBar","Content","Login","Route","Redirect","withRouter","s","App","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,EAAyBC,UAAzB,QAA0C,kBAA1C;AACA,OAAO,uCAAP;AACA,OAAO,6CAAP;AACA,OAAO,2CAAP;AACA,OAAO,+CAAP;AACA,OAAO,+CAAP;AACA,OAAO,0CAAP;AACA,OAAO,2BAAP;AACA,OAAOC,CAAP,MAAc,UAAd;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AACxBU,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACA,CAAd,EADM,CAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACE,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEP,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CAtCI,CA6CN;AACH;;AA/CyB;;AAkD5B,eAAeI,UAAU,CAACE,GAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport Header from './components/Header';\nimport SideBar from './components/SideBar';\nimport Content from './components/Content';\nimport Login from './components/content/login';\nimport {Route, Redirect, withRouter} from \"react-router-dom\";\nimport './components/content/css/AdminLTE.css';\nimport './components/content/css/_all-skins.min.css';\nimport './components/content/css/font-awesome.css';\nimport './components/content/css/font-awesome.min.css';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport s from './config';\n\nclass App extends Component {\n    render(){ \n      console.log(s.s)\n      //fungsi refresh token\n      // function refreshToken(){\n      //     fetch('http://192.168.2.7:8020/api-token-refresh/', {\n      //       method: 'post',\n      //       headers :{\"Content-Type\" : \"application/json\"},\n      //       body: JSON.stringify({\n      //           token: sessionStorage.name,\n      //           })\n      //     })\n      //     .then (response =>response.json())  \n      //     .then (response =>{\n      //     if (response.token===\"This field is required.\"){\n      //       sessionStorage.removeItem(\"name\")\n      //     }\n      //     else{\n      //       sessionStorage.setItem(\"name\",response.token)\n      //     }\n      //   })\n      // }\n\n      // // kalau token ga ada\n      // if ((sessionStorage.name===\"undefined\")||(sessionStorage.name===undefined)){\n      //   return (\n      //     <div>\n      //       <Redirect to=\"/login\" />\n      //       <Route path=\"/login\" component={Login}/>\n      //     </div>\n      //   )\n      // }\n      \n      // //kalau token ada\n      // else {\n      //   //fungsi untuk memanggil refresh token 1 detik setelah ada sesuatu yang di klik\n      //   setTimeout(function(){refreshToken()},1000)\n      //   //fungsi untuk memanggil refresh token tiap 590 detik\n      //   setInterval(function(){refreshToken()},590000)\n        return(\n          <div>\n            <Route path=\"/\" component={Header} />\n            <Route path=\"/\" component={SideBar} />\n            <Route path=\"/\" component={Content} />\n          </div>\n        ) \n      // }\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}