{"ast":null,"code":"var _jsxFileName = \"/home/didisetiawan/Downloads/dd/Xirka-ServerBaru/src/components/content/ruangan.js\";\nimport React, { Component } from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport { Route, Link, withRouter } from \"react-router-dom\";\nimport Daftarruangan from './daftarruangan';\nimport Editruangan from './editruangan';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nclass Ruangan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isidata: [],\n      editID: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://192.168.2.7:8020/doorlog/rooms/', {\n      method: 'post',\n      headers: {\n        \"Authorization\": \"Bearer \" + sessionStorage.name\n      }\n    }).then(response => response.json()).then(response => this.setState({\n      isidata: response.list\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"ruangan\");\n  } // deleteData(e,f,g){\n  //   var yes = window.confirm(\"Apakah anda yakin ingin menghapus data berikut: Terminal ID = \" +e+\", Nama Ruangan= \"+f+\", Instansi= \"+g+\" ?\");\n  //   if (yes === true){\n  //     let he= new Headers()\n  //     let token = this.props.token\n  //     he.append ('x-access-token', token)\n  //     fetch('http://192.168.2.7:3000/terminal/'+e, {\n  //       method: 'delete',\n  //       headers: he \n  //     })\n  //     .then(response=>{\n  //       if (response.ok){\n  //         window.alert(\"Data berhasil dihapus\")\n  //       }\n  //       else{\n  //         window.alert(\"Data tidak berhasil dihapus\")\n  //       }\n  //     })\n  //   }\n  // }\n  // editData(e){\n  //   this.setState({editID:e})\n  // }\n  // componentDidMount(){\n  //   let he= new Headers()\n  //   let token = this.props.token\n  //   he.append ('x-access-token', token)\n  //   fetch('http://192.168.2.7:3000/terminal', {\n  //     method: 'GET',\n  //     headers: he\n  //   })\n  //   .then(response=>response.json())\n  //   .then(data => this.setState({isidata: data}))\n  // }\n  // refresh(){\n  //   let he= new Headers()\n  //   let token = this.props.token\n  //   he.append ('x-access-token', token)\n  //   fetch('http://192.168.2.7:3000/terminal', {\n  //     method: 'GET',\n  //     headers: he\n  //   })\n  //   .then(response=>response.json())\n  //   .then(data => this.setState({isidata: data}))\n  // }\n  // render(){\n  //   sessionStorage.removeItem(\"login\");\n  //   const {isidata} = this.state;\n  //   var x=1;\n  //   function no(i){\n  //     var m=0\n  //     var hasil=m+i\n  //     return  hasil\n  //   }\n  //   const dataadmin = {\n  //     columns: [\n  //       {\n  //         label: 'No',\n  //         field: 'no',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Terminal ID',\n  //         field: 'terminalid',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Nama Ruangan',\n  //         field: 'namaruangan',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Instansi',\n  //         field: 'instansi',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Keterangan',\n  //         field: 'keterangan'\n  //       }\n  //     ],\n  //     rows: isidata.map(isi=>{\n  //       return {\n  //         no:no(x++),\n  //         terminalid:isi.terminal_id,\n  //         namaruangan:isi.room,\n  //         instansi: isi.instansi,\n  //         keterangan:<div className=\"editdelete\"> <Link to=\"/ruangan/edit\" onClick={() => this.editData(isi.terminal_id)}><i className=\"fa fa-pencil\"></i></Link> | <a className=\"mousepointer\" onClick={() => this.deleteData(isi.terminal_id,isi.room,isi.instansi)}> <i className=\"fa fa-trash\"></i></a> </div>\n  //       }\n  //     })\n  //   };\n  //   var y=1;\n  //   const dataclient = {\n  //     columns: [\n  //       {\n  //         label: 'No',\n  //         field: 'no',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Terminal ID',\n  //         field: 'terminalid',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Nama Ruangan',\n  //         field: 'namaruangan',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Instansi',\n  //         field: 'instansi',\n  //         sort: 'asc',\n  //       }\n  //     ],\n  //     rows: isidata.map(isi=>{\n  //       return {\n  //         no:no(y++),\n  //         terminalid:isi.terminal_id,\n  //         namaruangan:isi.room,\n  //         instansi: isi.instansi,\n  //       }\n  //     })\n  //   };\n  //   const {editID}= this.state;\n  //   if (sessionStorage.message===\"admin\"){\n  //     return (\n  //       <div>\n  //         <div>\n  //           <Route path=\"/ruangan/daftar\" render={ () => <Daftarruangan token={this.props.token} /> } />\n  //           <Route path=\"/ruangan/edit\" render={ () => <Editruangan token={this.props.token} editID={editID}/> } />\n  //         </div>\n  //         <div className=\"box-footer\">\n  //             <div className=\"kotakdaftarruangan\">\n  //                 <Link to=\"/ruangan/daftar\">\n  //                   <div className=\"daftar\">\n  //                     <i className=\"fa fa-plus\"></i> \n  //                     <span> Ruangan </span>\n  //                   </div>\n  //                 </Link>\n  //                 <span>\n  //                   <a onClick={() => this.refresh()}>\n  //                     <div className=\"daftar2\">\n  //                       <i className=\"fa fa-refresh\"></i>\n  //                     </div>\n  //                   </a>\n  //                 </span>\n  //             </div>\n  //             <div className=\"isitabel\">\n  //                 <MDBDataTable\n  //                 responsive\n  //                 striped\n  //                 bordered\n  //                 hover\n  //                 data={dataadmin}\n  //                 /> \n  //             </div>  \n  //         </div>\n  //       </div>       \n  //     );        \n  //   }\n  //   else{\n  //     return (\n  //       <div>\n  //         <div className=\"box-footer\">\n  //           <div className=\"isitabel\">\n  //             <MDBDataTable\n  //             responsive\n  //             striped\n  //             bordered\n  //             hover\n  //             data={dataclient}\n  //             /> \n  //           </div>  \n  //         </div>\n  //       </div>       \n  //     );\n  //   }\n  // }\n\n\n}\n\nexport default withRouter(Ruangan);","map":{"version":3,"sources":["/home/didisetiawan/Downloads/dd/Xirka-ServerBaru/src/components/content/ruangan.js"],"names":["React","Component","MDBDataTable","Route","Link","withRouter","Daftarruangan","Editruangan","Ruangan","constructor","props","state","isidata","editID","componentDidMount","fetch","method","headers","sessionStorage","name","then","response","json","setState","list","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAAQC,KAAR,EAAcC,IAAd,EAAmBC,UAAnB,QAAoC,kBAApC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,+CAAP;;AAEA,MAAMC,OAAN,SAAsBP,SAAtB,CAA+B;AAE3BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,MAAM,EAAC;AAFI,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AAAC,yBAAkB,YAAWC,cAAc,CAACC;AAA7C;AAFiC,KAA3C,CAAL,CAIKC,IAJL,CAIWC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EAJtB,EAKKF,IALL,CAKWC,QAAQ,IAAG,KAAKE,QAAL,CAAc;AAACX,MAAAA,OAAO,EAACS,QAAQ,CAACG;AAAlB,KAAd,CALtB;AAMD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF;AAGD,GAvB0B,CAwjN2B;;AAmN/B,eAAepB,UAAU,CAACG,OAAD,CAAzB","sourcesContent":["import React,{Component} from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport {Route,Link,withRouter} from \"react-router-dom\";\nimport Daftarruangan from './daftarruangan';\nimport Editruangan from './editruangan';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nclass Ruangan extends Component{\n    \n    constructor(props) {\n      super(props);\n      this.state = {\n        isidata: [],\n        editID:'',\n      };\n    }\n\n    componentDidMount(){\n      fetch('http://192.168.2.7:8020/doorlog/rooms/', {\n            method: 'post',\n            headers :{\"Authorization\" : \"Bearer \"+ sessionStorage.name}\n          })\n          .then (response =>response.json())  \n          .then (response =>this.setState({isidata:response.list}))\n    }\n\n    render(){\n      return(\n        <div>ruangan</div>\n      )\n    }\n    // deleteData(e,f,g){\n    //   var yes = window.confirm(\"Apakah anda yakin ingin menghapus data berikut: Terminal ID = \" +e+\", Nama Ruangan= \"+f+\", Instansi= \"+g+\" ?\");\n    //   if (yes === true){\n    //     let he= new Headers()\n    //     let token = this.props.token\n    //     he.append ('x-access-token', token)\n    //     fetch('http://192.168.2.7:3000/terminal/'+e, {\n    //       method: 'delete',\n    //       headers: he \n    //     })\n    //     .then(response=>{\n    //       if (response.ok){\n    //         window.alert(\"Data berhasil dihapus\")\n    //       }\n    //       else{\n    //         window.alert(\"Data tidak berhasil dihapus\")\n    //       }\n    //     })\n    //   }\n    // }\n\n    // editData(e){\n    //   this.setState({editID:e})\n    // }\n\n    // componentDidMount(){\n    //   let he= new Headers()\n    //   let token = this.props.token\n    //   he.append ('x-access-token', token)\n    //   fetch('http://192.168.2.7:3000/terminal', {\n    //     method: 'GET',\n    //     headers: he\n    //   })\n    //   .then(response=>response.json())\n    //   .then(data => this.setState({isidata: data}))\n    // }\n\n    // refresh(){\n    //   let he= new Headers()\n    //   let token = this.props.token\n    //   he.append ('x-access-token', token)\n    //   fetch('http://192.168.2.7:3000/terminal', {\n    //     method: 'GET',\n    //     headers: he\n    //   })\n    //   .then(response=>response.json())\n    //   .then(data => this.setState({isidata: data}))\n    // }\n\n    \n  \n    // render(){\n    //   sessionStorage.removeItem(\"login\");\n    //   const {isidata} = this.state;\n    //   var x=1;\n    //   function no(i){\n    //     var m=0\n    //     var hasil=m+i\n    //     return  hasil\n    //   }\n    //   const dataadmin = {\n    //     columns: [\n    //       {\n    //         label: 'No',\n    //         field: 'no',\n    //         sort: 'asc',\n    //       },\n    //       {\n    //         label: 'Terminal ID',\n    //         field: 'terminalid',\n    //         sort: 'asc',\n    //       },\n    //       {\n    //         label: 'Nama Ruangan',\n    //         field: 'namaruangan',\n    //         sort: 'asc',\n    //       },\n    //       {\n    //         label: 'Instansi',\n    //         field: 'instansi',\n    //         sort: 'asc',\n    //       },\n    //       {\n    //         label: 'Keterangan',\n    //         field: 'keterangan'\n    //       }\n    //     ],\n    //     rows: isidata.map(isi=>{\n    //       return {\n    //         no:no(x++),\n    //         terminalid:isi.terminal_id,\n    //         namaruangan:isi.room,\n    //         instansi: isi.instansi,\n    //         keterangan:<div className=\"editdelete\"> <Link to=\"/ruangan/edit\" onClick={() => this.editData(isi.terminal_id)}><i className=\"fa fa-pencil\"></i></Link> | <a className=\"mousepointer\" onClick={() => this.deleteData(isi.terminal_id,isi.room,isi.instansi)}> <i className=\"fa fa-trash\"></i></a> </div>\n    //       }\n    //     })\n    //   };\n    //   var y=1;\n    //   const dataclient = {\n    //     columns: [\n    //       {\n    //         label: 'No',\n    //         field: 'no',\n    //         sort: 'asc',\n    //       },\n    //       {\n    //         label: 'Terminal ID',\n    //         field: 'terminalid',\n    //         sort: 'asc',\n    //       },\n    //       {\n    //         label: 'Nama Ruangan',\n    //         field: 'namaruangan',\n    //         sort: 'asc',\n    //       },\n    //       {\n    //         label: 'Instansi',\n    //         field: 'instansi',\n    //         sort: 'asc',\n    //       }\n    //     ],\n    //     rows: isidata.map(isi=>{\n    //       return {\n    //         no:no(y++),\n    //         terminalid:isi.terminal_id,\n    //         namaruangan:isi.room,\n    //         instansi: isi.instansi,\n    //       }\n    //     })\n    //   };\n    //   const {editID}= this.state;\n    //   if (sessionStorage.message===\"admin\"){\n    //     return (\n    //       <div>\n    //         <div>\n    //           <Route path=\"/ruangan/daftar\" render={ () => <Daftarruangan token={this.props.token} /> } />\n    //           <Route path=\"/ruangan/edit\" render={ () => <Editruangan token={this.props.token} editID={editID}/> } />\n    //         </div>\n             \n    //         <div className=\"box-footer\">\n    //             <div className=\"kotakdaftarruangan\">\n    //                 <Link to=\"/ruangan/daftar\">\n    //                   <div className=\"daftar\">\n    //                     <i className=\"fa fa-plus\"></i> \n    //                     <span> Ruangan </span>\n    //                   </div>\n    //                 </Link>\n    //                 <span>\n    //                   <a onClick={() => this.refresh()}>\n    //                     <div className=\"daftar2\">\n    //                       <i className=\"fa fa-refresh\"></i>\n    //                     </div>\n    //                   </a>\n    //                 </span>\n    //             </div>\n    //             <div className=\"isitabel\">\n    //                 <MDBDataTable\n    //                 responsive\n    //                 striped\n    //                 bordered\n    //                 hover\n    //                 data={dataadmin}\n    //                 /> \n    //             </div>  \n    //         </div>\n    //       </div>       \n    //     );        \n    //   }\n    //   else{\n    //     return (\n    //       <div>\n    //         <div className=\"box-footer\">\n    //           <div className=\"isitabel\">\n    //             <MDBDataTable\n    //             responsive\n    //             striped\n    //             bordered\n    //             hover\n    //             data={dataclient}\n    //             /> \n    //           </div>  \n    //         </div>\n    //       </div>       \n    //     );\n    //   }\n    // }\n}\nexport default withRouter(Ruangan);"]},"metadata":{},"sourceType":"module"}