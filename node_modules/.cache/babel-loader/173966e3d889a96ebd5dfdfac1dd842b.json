{"ast":null,"code":"var _jsxFileName = \"/home/didisetiawan/Downloads/dd/Xirka-ServerBaru/src/components/content/logpintu.js\";\nimport React, { Component } from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport { withRouter, Route, Link } from 'react-router-dom';\nimport Daftarlogpintu from './daftarlogpintu';\n\nclass Logpintu extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"logpintu\");\n  } //   constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //       isidata: [],\n  //       ins: [],\n  //       room: [],\n  //       scardID: '',\n  //       terminalID: '',\n  //       startDate: '',\n  //       endDate: '',\n  //       datasalah: false,\n  //     };\n  //     this.handleChange = this.handleChange.bind(this);\n  //     this.handleSubmit = this.handleSubmit.bind(this);\n  //   }\n  //   handleChange(e) {\n  //     const { name, value } = e.target;\n  //     this.setState({ [name]: value });\n  //   }\n  //   handleSubmit(e){\n  //     e.preventDefault();\n  //     const {scardID,terminalID,startDate,endDate} = this.state\n  //     var scardid\n  //     var termid\n  //     var starttime\n  //     var endtime\n  //     var filter\n  //     if (scardID===''){\n  //       scardid=''\n  //     }\n  //     else {\n  //       scardid='&scard_id='+scardID\n  //     }\n  //     if (terminalID===''){\n  //       termid=''\n  //     }\n  //     else {\n  //       termid='&term_id='+terminalID\n  //     }\n  //     if (startDate===''){\n  //       starttime=''\n  //     }\n  //     else {\n  //       starttime='&startdatetime='+startDate.substring(0,4)+startDate.substring(5,7)+startDate.substring(8,10)+'T000000+07:00'\n  //     }\n  //     if (endDate===''){\n  //       endtime=''\n  //     }\n  //     else {\n  //       endtime='&enddatetime='+endDate.substring(0,4)+endDate.substring(5,7)+endDate.substring(8,10)+'T000000+07:00'\n  //     }\n  //     if ((endDate==='')||(startDate==='')){\n  //       if ((startDate==='')&&(endDate!=='')){\n  //         starttime=''\n  //         endtime='&year='+endDate.substring(0,4)+'&month='+endDate.substring(5,7)+'&day='+endDate.substring(8,10)\n  //       }\n  //       else if ((endDate==='')&&(startDate!=='')){\n  //         starttime='&year='+startDate.substring(0,4)+'&month='+startDate.substring(5,7)+'&day='+startDate.substring(8,10)\n  //         endtime=''\n  //       }\n  //       else {\n  //         starttime=''\n  //         endtime=''\n  //       }\n  //     }\n  //     if (((endDate!=='')&&(startDate!==''))&&(('&year='+startDate.substring(0,4)+'&month='+startDate.substring(5,7)+'&day='+startDate.substring(8,10))===('&year='+endDate.substring(0,4)+'&month='+endDate.substring(5,7)+'&day='+endDate.substring(8,10)))){\n  //       starttime='&year='+startDate.substring(0,4)+'&month='+startDate.substring(5,7)+'&day='+startDate.substring(8,10)\n  //       endtime=''\n  //     }\n  //     filter = scardid+termid+starttime+endtime;\n  //     let h = new Headers();\n  //     h.append ('Authorization', 'Basic YWRtaW46YmFuZHVuZzEyMw==')\n  //     fetch('https://192.168.2.7/smartlock/api/v1/smartlockview.json?limit='+this.props.limit+filter+\"&ob=1\", {\n  //     method: 'GET',\n  //     headers: h\n  //     })\n  //     .then(response=>response.json())\n  //     .then(data => {\n  //       if (data.code===200){\n  //           this.setState({isidata: data.results})\n  //           this.setState({datasalah:false})\n  //       }    \n  //       else {\n  //           this.setState({datasalah:true})\n  //       }\n  //     }) \n  //     //mengambil instansi berdasarkan scard id\n  //     let he= new Headers()\n  //     let token = this.props.token\n  //     he.append ('x-access-token', token)\n  //     fetch('http://192.168.2.7:3000/card', {\n  //     method: 'GET',\n  //     headers: he\n  //     })\n  //     .then(response=>response.json())\n  //     .then(data => this.setState({ins: data}))\n  //     //mengambil ruangan berdasarkan terminal id\n  //     fetch('http://192.168.2.7:3000/terminal', {\n  //     method: 'GET',\n  //     headers: he\n  //     })\n  //     .then(response=>response.json())\n  //     .then(data => this.setState({room: data}))\n  //   }\n  //   componentDidMount(){\n  //     let h = new Headers();\n  //     h.append ('Authorization', 'Basic YWRtaW46YmFuZHVuZzEyMw==')\n  //     fetch('https://192.168.2.7/smartlock/api/v1/smartlockview.json?limit='+this.props.limit+\"&ob=1\", {\n  //     method: 'GET',\n  //     headers: h\n  //     })\n  //     .then(response=>response.json())\n  //     .then(data => this.setState({isidata: data.results}))\n  //     //mengambil instansi berdasarkan scard id\n  //     let he= new Headers()\n  //     let token = this.props.token\n  //     he.append ('x-access-token', token)\n  //     fetch('http://192.168.2.7:3000/card', {\n  //     method: 'GET',\n  //     headers: he\n  //     })\n  //     .then(response=>response.json())\n  //     .then(data => this.setState({ins: data}))\n  //     //mengambil ruangan berdasarkan terminal id\n  //     fetch('http://192.168.2.7:3000/terminal', {\n  //     method: 'GET',\n  //     headers: he\n  //     })\n  //     .then(response=>response.json())\n  //     .then(data => this.setState({room: data}))\n  //   }\n  //   refresh(){\n  //     let h = new Headers();\n  //     h.append ('Authorization', 'Basic YWRtaW46YmFuZHVuZzEyMw==')\n  //     fetch('https://192.168.2.7/smartlock/api/v1/smartlockview.json?limit='+this.props.limit+\"&ob=1\", {\n  //     method: 'GET',\n  //     headers: h\n  //     })\n  //     .then(response=>response.json())\n  //     .then(data => this.setState({isidata: data.results}))\n  //     //mengambil instansi berdasarkan scard id\n  //     let he= new Headers()\n  //     let token = this.props.token\n  //     he.append ('x-access-token', token)\n  //     fetch('http://192.168.2.7:3000/card', {\n  //     method: 'GET',\n  //     headers: he\n  //     })\n  //     .then(response=>response.json())\n  //     .then(data => this.setState({ins: data}))\n  //     //mengambil ruangan berdasarkan terminal id\n  //     fetch('http://192.168.2.7:3000/terminal', {\n  //     method: 'GET',\n  //     headers: he\n  //     })\n  //     .then(response=>response.json())\n  //     .then(data => this.setState({room: data}))\n  //   }\n  // render(){\n  //   const {datasalah} = this.state\n  //   sessionStorage.removeItem(\"login\");\n  //   //fungsi status\n  //   function lockstatus(e){\n  //     var hasil\n  //     if (e===0){\n  //       hasil = \"Checked In\"\n  //     }\n  //     else if (e===1) {\n  //       hasil = \"Checked Out\"\n  //     }\n  //     else if (e===2) {\n  //       hasil = \"Izin\"\n  //     }\n  //     else if (e===3) {\n  //       hasil = \"Sakit\"\n  //     }\n  //     return hasil\n  //   }\n  //   //fungsi ambil nama dari pengguna\n  //   function nama(nim1,array){\n  //     var hasil\n  //     var i\n  //     for ( i=0; i<array.length; i++){\n  //       if (String(nim1)===array[i].card_id){\n  //         hasil = array[i].name\n  //         break\n  //       }\n  //       else {\n  //         hasil = 'Tidak Terdaftar'\n  //       }\n  //     }\n  //     return hasil\n  //   }\n  //   //fungsi ambil instansi dari pengguna\n  //   function instansi(nim1,array){\n  //     var hasil\n  //     var i\n  //     for ( i=0; i<array.length; i++){\n  //       if (String(nim1)===array[i].card_id){\n  //         hasil = array[i].instansi\n  //         break\n  //       }\n  //       else {\n  //         hasil = 'Tidak Terdaftar'\n  //       }\n  //     }\n  //     return hasil\n  //   }\n  //   //fungsi ambil ruangan dari ruangan\n  //   function ruangan(termid,room){\n  //     var ruang\n  //     var i\n  //     for ( i=0; i<room.length; i++){\n  //       if (String(termid)===room[i].terminal_id){\n  //         ruang = room[i].room\n  //         break\n  //       }\n  //       else {\n  //         ruang = 'Tidak Terdaftar'\n  //       }\n  //     }\n  //     return ruang\n  //   }\n  //   //fungsi parsing waktu\n  //   function waktu(t){\n  //     var tahun,bulan,tanggal,jam,menit,tgl,j,m,date;\n  //     date = new Date (t)\n  //     tahun = String(date.getFullYear())\n  //     var months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"];\n  //     bulan = months[(date.getMonth())]\n  //     tgl = date.getDate()\n  //     if (tgl <=9){\n  //       tanggal = \"0\"+String(tgl)\n  //     }\n  //     else {\n  //       tanggal = String(tgl)\n  //     }\n  //     j = date.getHours()\n  //     if (j<=9){\n  //       jam = \"0\"+String(j)\n  //     }\n  //     else {\n  //       jam = String(j)\n  //     }\n  //     m = date.getMinutes()\n  //     if (m<=9){\n  //       menit = \"0\"+String(m)\n  //     }\n  //     else {\n  //       menit = String(m)\n  //     }\n  //     return bulan+\" \"+tanggal+\", \"+tahun+\" \"+jam+\":\"+menit+\":00\"\n  //   }\n  //   var x=1;\n  //   function no(i){\n  //     var m=0\n  //     var hasil=m+i\n  //     return  hasil\n  //   }\n  //   const data = {\n  //     columns: [\n  //       {\n  //         label: 'No',\n  //         field: 'no',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Waktu',\n  //         field: 'waktu',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Scard ID',\n  //         field: 'scardid',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'NIP/NIM',\n  //         field: 'nipnim',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Nama',\n  //         field: 'nama',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Instansi',\n  //         field: 'instansi',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Terminal ID',\n  //         field: 'terminalid',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Ruangan',\n  //         field: 'ruangan',\n  //         sort: 'asc',\n  //       },\n  //       {\n  //         label: 'Status',\n  //         field: 'status',\n  //         sort: 'asc',\n  //       }\n  //     ],\n  //     rows:this.state.isidata.map(isi=>{\n  //       return{\n  //         no:no(x++),\n  //         waktu: waktu(isi.checked_tm),\n  //         scardid:isi.scard_id,\n  //         nipnim:isi.scard_id,\n  //         nama:nama(isi.scard_id,this.state.ins),\n  //         instansi: instansi(isi.scard_id,this.state.ins),\n  //         terminalid: isi.term_id,\n  //         ruangan: ruangan(isi.term_id,this.state.room),\n  //         status: lockstatus(isi.lockstatus),\n  //       }\n  //     })\n  //   };\n  //   while (document.cookie.csrftoken===''){\n  //     return (<span>loading</span>)\n  //   }  \n  //   if (sessionStorage.message===\"admin\"){\n  //     return (\n  //       <div>\n  //         <div className=\"kotakfilter\"> \n  //           <form className=\"kotakforminputlogpintu\" onSubmit={this.handleSubmit}>\n  //             <div className=\"kotakinputlogpintuscardid\">\n  //               <label> Scard ID </label> <br></br>\n  //               <input name=\"scardID\" onChange={this.handleChange} className=\"inputformlogpintuscardid\" type=\"text\" placeholder=\"Scard Id\"></input>\n  //             </div>\n  //             <div className=\"kotakinputlogpintutermid\">\n  //               <label> Terminal ID </label> <br></br>\n  //               <input name=\"terminalID\" onChange={this.handleChange} className=\"inputformlogpintutermid\" type=\"text\" placeholder=\"Terminal Id\"></input>\n  //             </div>\n  //             <div className=\"kotakinputlogpintustart\">\n  //               <label> Start Date </label> <br></br>\n  //               <input name=\"startDate\" onChange={this.handleChange} className=\"inputformlogpintustart\" type=\"date\" ></input>\n  //             </div> \n  //             <div className=\"kotakinputlogpintuend\">\n  //               <label> End Date </label> <br></br>\n  //               <input name=\"endDate\" onChange={this.handleChange} className=\"inputformlogpintuend\" type=\"date\"></input>\n  //             </div>\n  //             {\n  //               datasalah &&\n  //               <p className=\"textmerah\">*Data yang diinput salah</p>\n  //             }\n  //             { \n  //               (datasalah===false) &&\n  //               <p className=\"texthijau\">&emsp;</p>\n  //             }\n  //             <div className=\"kotaksubmitlogpintu\">\n  //               <input className=\"submitformlogpintu\" type=\"submit\" value=\"Filter\"></input>\n  //             </div>\n  //           </form> \n  //         </div>\n  //         <div>\n  //           <Route path=\"/logpintu/daftar\" render={ () => <Daftarlogpintu token={this.props.token} /> } />\n  //         </div>      \n  //         <div className=\"kotaktabellogpintu\">\n  //             <div className=\"kotakdaftarruangan\">\n  //                 <Link to=\"/logpintu/daftar\">\n  //                   <div className=\"daftar\">\n  //                     <i className=\"fa fa-plus\"></i> \n  //                     <span> Log Pintu </span>\n  //                   </div>\n  //                 </Link>\n  //                 <span>\n  //                   <a onClick={() => this.refresh()}>\n  //                     <div className=\"daftar2\">\n  //                       <i className=\"fa fa-refresh\"></i>\n  //                     </div>\n  //                   </a>\n  //                 </span>\n  //             </div>\n  //             <div className=\"isitabel\">\n  //               <MDBDataTable\n  //                 responsive\n  //                 striped\n  //                 bordered\n  //                 small\n  //                 hover\n  //                 data={data}\n  //               />\n  //             </div>   \n  //         </div>\n  //         <div>\n  //         </div>\n  //       </div>\n  //     );\n  //   }\n  //   else{\n  //     return (\n  //       <div>  \n  //         <div className=\"kotakfilter\"> \n  //           <form className=\"kotakforminputlogpintu\" onSubmit={this.handleSubmit}>\n  //             <div className=\"kotakinputlogpintuscardid\">\n  //               <label> Scard ID </label> <br></br>\n  //               <input name=\"scardID\" onChange={this.handleChange} className=\"inputformlogpintuscardid\" type=\"text\" placeholder=\"Scard Id\"></input>\n  //             </div>\n  //             <div className=\"kotakinputlogpintutermid\">\n  //               <label> Terminal ID </label> <br></br>\n  //               <input name=\"terminalID\" onChange={this.handleChange} className=\"inputformlogpintutermid\" type=\"text\" placeholder=\"Terminal Id\"></input>\n  //             </div>\n  //             <div className=\"kotakinputlogpintustart\">\n  //               <label> Start Date </label> <br></br>\n  //               <input name=\"startDate\" onChange={this.handleChange} className=\"inputformlogpintustart\" type=\"date\" ></input>\n  //             </div> \n  //             <div className=\"kotakinputlogpintuend\">\n  //               <label> End Date </label> <br></br>\n  //               <input name=\"endDate\" onChange={this.handleChange} className=\"inputformlogpintuend\" type=\"date\"></input>\n  //             </div>\n  //             <div className=\"kotaksubmitlogpintu2\">\n  //               <input className=\"submitformlogpintu\" type=\"submit\" value=\"Filter\"></input>\n  //             </div>\n  //           </form> \n  //         </div>   \n  //         <div className=\"kotaktabellogpintu2\">\n  //             <div className=\"isitabel\">\n  //               <MDBDataTable\n  //                 responsive\n  //                 striped\n  //                 bordered\n  //                 small\n  //                 hover\n  //                 data={data}\n  //               />\n  //             </div>   \n  //         </div>\n  //       </div>\n  //     );\n  //   }\n  //   }\n\n\n}\n\nexport default withRouter(Logpintu);","map":{"version":3,"sources":["/home/didisetiawan/Downloads/dd/Xirka-ServerBaru/src/components/content/logpintu.js"],"names":["React","Component","MDBDataTable","withRouter","Route","Link","Daftarlogpintu","Logpintu","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAAQC,UAAR,EAAmBC,KAAnB,EAAyBC,IAAzB,QAAoC,kBAApC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAIA,MAAMC,QAAN,SAAuBN,SAAvB,CAAgC;AAC9BO,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,GAP6B,CAQhlegC;;AAqehC,eAAeL,UAAU,CAACI,QAAD,CAAzB","sourcesContent":["import React,{Component} from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport {withRouter,Route,Link} from 'react-router-dom';\nimport Daftarlogpintu from './daftarlogpintu';\n\n\n\nclass Logpintu extends Component{\n  render(){\n    return (\n      <div>\n        logpintu\n      </div>\n    )\n  }\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       isidata: [],\n//       ins: [],\n//       room: [],\n//       scardID: '',\n//       terminalID: '',\n//       startDate: '',\n//       endDate: '',\n//       datasalah: false,\n//     };\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n\n//   handleChange(e) {\n//     const { name, value } = e.target;\n//     this.setState({ [name]: value });\n//   }\n  \n//   handleSubmit(e){\n//     e.preventDefault();\n\n//     const {scardID,terminalID,startDate,endDate} = this.state\n//     var scardid\n//     var termid\n//     var starttime\n//     var endtime\n//     var filter\n\n//     if (scardID===''){\n//       scardid=''\n//     }\n//     else {\n//       scardid='&scard_id='+scardID\n//     }\n\n//     if (terminalID===''){\n//       termid=''\n//     }\n//     else {\n//       termid='&term_id='+terminalID\n//     }\n//     if (startDate===''){\n//       starttime=''\n//     }\n//     else {\n//       starttime='&startdatetime='+startDate.substring(0,4)+startDate.substring(5,7)+startDate.substring(8,10)+'T000000+07:00'\n//     }\n\n//     if (endDate===''){\n//       endtime=''\n//     }\n//     else {\n//       endtime='&enddatetime='+endDate.substring(0,4)+endDate.substring(5,7)+endDate.substring(8,10)+'T000000+07:00'\n//     }\n\n//     if ((endDate==='')||(startDate==='')){\n//       if ((startDate==='')&&(endDate!=='')){\n//         starttime=''\n//         endtime='&year='+endDate.substring(0,4)+'&month='+endDate.substring(5,7)+'&day='+endDate.substring(8,10)\n//       }\n//       else if ((endDate==='')&&(startDate!=='')){\n//         starttime='&year='+startDate.substring(0,4)+'&month='+startDate.substring(5,7)+'&day='+startDate.substring(8,10)\n//         endtime=''\n//       }\n//       else {\n//         starttime=''\n//         endtime=''\n//       }\n//     }\n\n//     if (((endDate!=='')&&(startDate!==''))&&(('&year='+startDate.substring(0,4)+'&month='+startDate.substring(5,7)+'&day='+startDate.substring(8,10))===('&year='+endDate.substring(0,4)+'&month='+endDate.substring(5,7)+'&day='+endDate.substring(8,10)))){\n//       starttime='&year='+startDate.substring(0,4)+'&month='+startDate.substring(5,7)+'&day='+startDate.substring(8,10)\n//       endtime=''\n//     }\n\n\n\n//     filter = scardid+termid+starttime+endtime;\n\n//     let h = new Headers();\n//     h.append ('Authorization', 'Basic YWRtaW46YmFuZHVuZzEyMw==')\n//     fetch('https://192.168.2.7/smartlock/api/v1/smartlockview.json?limit='+this.props.limit+filter+\"&ob=1\", {\n//     method: 'GET',\n//     headers: h\n//     })\n//     .then(response=>response.json())\n//     .then(data => {\n//       if (data.code===200){\n//           this.setState({isidata: data.results})\n//           this.setState({datasalah:false})\n//       }    \n//       else {\n//           this.setState({datasalah:true})\n//       }\n//     }) \n    \n//     //mengambil instansi berdasarkan scard id\n//     let he= new Headers()\n//     let token = this.props.token\n//     he.append ('x-access-token', token)\n//     fetch('http://192.168.2.7:3000/card', {\n//     method: 'GET',\n//     headers: he\n//     })\n//     .then(response=>response.json())\n//     .then(data => this.setState({ins: data}))\n\n//     //mengambil ruangan berdasarkan terminal id\n//     fetch('http://192.168.2.7:3000/terminal', {\n//     method: 'GET',\n//     headers: he\n//     })\n//     .then(response=>response.json())\n//     .then(data => this.setState({room: data}))\n//   }\n\n//   componentDidMount(){\n//     let h = new Headers();\n//     h.append ('Authorization', 'Basic YWRtaW46YmFuZHVuZzEyMw==')\n//     fetch('https://192.168.2.7/smartlock/api/v1/smartlockview.json?limit='+this.props.limit+\"&ob=1\", {\n//     method: 'GET',\n//     headers: h\n//     })\n//     .then(response=>response.json())\n//     .then(data => this.setState({isidata: data.results}))\n//     //mengambil instansi berdasarkan scard id\n        \n//     let he= new Headers()\n//     let token = this.props.token\n//     he.append ('x-access-token', token)\n//     fetch('http://192.168.2.7:3000/card', {\n//     method: 'GET',\n//     headers: he\n//     })\n//     .then(response=>response.json())\n//     .then(data => this.setState({ins: data}))\n    \n//     //mengambil ruangan berdasarkan terminal id\n//     fetch('http://192.168.2.7:3000/terminal', {\n//     method: 'GET',\n//     headers: he\n//     })\n//     .then(response=>response.json())\n//     .then(data => this.setState({room: data}))\n//   }\n  \n//   refresh(){\n//     let h = new Headers();\n//     h.append ('Authorization', 'Basic YWRtaW46YmFuZHVuZzEyMw==')\n//     fetch('https://192.168.2.7/smartlock/api/v1/smartlockview.json?limit='+this.props.limit+\"&ob=1\", {\n//     method: 'GET',\n//     headers: h\n//     })\n//     .then(response=>response.json())\n//     .then(data => this.setState({isidata: data.results}))\n//     //mengambil instansi berdasarkan scard id\n        \n//     let he= new Headers()\n//     let token = this.props.token\n//     he.append ('x-access-token', token)\n//     fetch('http://192.168.2.7:3000/card', {\n//     method: 'GET',\n//     headers: he\n//     })\n//     .then(response=>response.json())\n//     .then(data => this.setState({ins: data}))\n    \n//     //mengambil ruangan berdasarkan terminal id\n//     fetch('http://192.168.2.7:3000/terminal', {\n//     method: 'GET',\n//     headers: he\n//     })\n//     .then(response=>response.json())\n//     .then(data => this.setState({room: data}))\n//   }\n\n// render(){\n//   const {datasalah} = this.state\n//   sessionStorage.removeItem(\"login\");\n//   //fungsi status\n//   function lockstatus(e){\n//     var hasil\n//     if (e===0){\n//       hasil = \"Checked In\"\n//     }\n//     else if (e===1) {\n//       hasil = \"Checked Out\"\n//     }\n//     else if (e===2) {\n//       hasil = \"Izin\"\n//     }\n//     else if (e===3) {\n//       hasil = \"Sakit\"\n//     }\n//     return hasil\n//   }\n  \n//   //fungsi ambil nama dari pengguna\n//   function nama(nim1,array){\n//     var hasil\n//     var i\n//     for ( i=0; i<array.length; i++){\n//       if (String(nim1)===array[i].card_id){\n//         hasil = array[i].name\n//         break\n//       }\n//       else {\n//         hasil = 'Tidak Terdaftar'\n//       }\n//     }\n//     return hasil\n//   }\n\n//   //fungsi ambil instansi dari pengguna\n//   function instansi(nim1,array){\n//     var hasil\n//     var i\n//     for ( i=0; i<array.length; i++){\n//       if (String(nim1)===array[i].card_id){\n//         hasil = array[i].instansi\n//         break\n//       }\n//       else {\n//         hasil = 'Tidak Terdaftar'\n//       }\n//     }\n//     return hasil\n//   }\n  \n//   //fungsi ambil ruangan dari ruangan\n//   function ruangan(termid,room){\n//     var ruang\n//     var i\n//     for ( i=0; i<room.length; i++){\n//       if (String(termid)===room[i].terminal_id){\n//         ruang = room[i].room\n//         break\n//       }\n//       else {\n//         ruang = 'Tidak Terdaftar'\n//       }\n//     }\n//     return ruang\n//   }\n  \n//   //fungsi parsing waktu\n//   function waktu(t){\n//     var tahun,bulan,tanggal,jam,menit,tgl,j,m,date;\n//     date = new Date (t)\n//     tahun = String(date.getFullYear())\n//     var months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"];\n//     bulan = months[(date.getMonth())]\n//     tgl = date.getDate()\n//     if (tgl <=9){\n//       tanggal = \"0\"+String(tgl)\n//     }\n//     else {\n//       tanggal = String(tgl)\n//     }\n//     j = date.getHours()\n//     if (j<=9){\n//       jam = \"0\"+String(j)\n//     }\n//     else {\n//       jam = String(j)\n//     }\n//     m = date.getMinutes()\n//     if (m<=9){\n//       menit = \"0\"+String(m)\n//     }\n//     else {\n//       menit = String(m)\n//     }\n//     return bulan+\" \"+tanggal+\", \"+tahun+\" \"+jam+\":\"+menit+\":00\"\n//   }\n  \n//   var x=1;\n\n//   function no(i){\n//     var m=0\n//     var hasil=m+i\n//     return  hasil\n//   }\n\n//   const data = {\n//     columns: [\n//       {\n//         label: 'No',\n//         field: 'no',\n//         sort: 'asc',\n//       },\n//       {\n//         label: 'Waktu',\n//         field: 'waktu',\n//         sort: 'asc',\n//       },\n//       {\n//         label: 'Scard ID',\n//         field: 'scardid',\n//         sort: 'asc',\n//       },\n//       {\n//         label: 'NIP/NIM',\n//         field: 'nipnim',\n//         sort: 'asc',\n//       },\n//       {\n//         label: 'Nama',\n//         field: 'nama',\n//         sort: 'asc',\n//       },\n//       {\n//         label: 'Instansi',\n//         field: 'instansi',\n//         sort: 'asc',\n//       },\n//       {\n//         label: 'Terminal ID',\n//         field: 'terminalid',\n//         sort: 'asc',\n//       },\n//       {\n//         label: 'Ruangan',\n//         field: 'ruangan',\n//         sort: 'asc',\n//       },\n//       {\n//         label: 'Status',\n//         field: 'status',\n//         sort: 'asc',\n//       }\n//     ],\n//     rows:this.state.isidata.map(isi=>{\n//       return{\n//         no:no(x++),\n//         waktu: waktu(isi.checked_tm),\n//         scardid:isi.scard_id,\n//         nipnim:isi.scard_id,\n//         nama:nama(isi.scard_id,this.state.ins),\n//         instansi: instansi(isi.scard_id,this.state.ins),\n//         terminalid: isi.term_id,\n//         ruangan: ruangan(isi.term_id,this.state.room),\n//         status: lockstatus(isi.lockstatus),\n//       }\n//     })\n//   };\n//   while (document.cookie.csrftoken===''){\n//     return (<span>loading</span>)\n//   }  \n\n//   if (sessionStorage.message===\"admin\"){\n//     return (\n//       <div>\n//         <div className=\"kotakfilter\"> \n//           <form className=\"kotakforminputlogpintu\" onSubmit={this.handleSubmit}>\n//             <div className=\"kotakinputlogpintuscardid\">\n//               <label> Scard ID </label> <br></br>\n//               <input name=\"scardID\" onChange={this.handleChange} className=\"inputformlogpintuscardid\" type=\"text\" placeholder=\"Scard Id\"></input>\n//             </div>\n            \n//             <div className=\"kotakinputlogpintutermid\">\n//               <label> Terminal ID </label> <br></br>\n//               <input name=\"terminalID\" onChange={this.handleChange} className=\"inputformlogpintutermid\" type=\"text\" placeholder=\"Terminal Id\"></input>\n//             </div>\n  \n//             <div className=\"kotakinputlogpintustart\">\n//               <label> Start Date </label> <br></br>\n//               <input name=\"startDate\" onChange={this.handleChange} className=\"inputformlogpintustart\" type=\"date\" ></input>\n//             </div> \n            \n//             <div className=\"kotakinputlogpintuend\">\n//               <label> End Date </label> <br></br>\n//               <input name=\"endDate\" onChange={this.handleChange} className=\"inputformlogpintuend\" type=\"date\"></input>\n//             </div>\n            \n//             {\n//               datasalah &&\n//               <p className=\"textmerah\">*Data yang diinput salah</p>\n//             }\n//             { \n//               (datasalah===false) &&\n//               <p className=\"texthijau\">&emsp;</p>\n//             }\n//             <div className=\"kotaksubmitlogpintu\">\n//               <input className=\"submitformlogpintu\" type=\"submit\" value=\"Filter\"></input>\n//             </div>\n//           </form> \n//         </div>\n//         <div>\n//           <Route path=\"/logpintu/daftar\" render={ () => <Daftarlogpintu token={this.props.token} /> } />\n//         </div>      \n//         <div className=\"kotaktabellogpintu\">\n//             <div className=\"kotakdaftarruangan\">\n//                 <Link to=\"/logpintu/daftar\">\n//                   <div className=\"daftar\">\n//                     <i className=\"fa fa-plus\"></i> \n//                     <span> Log Pintu </span>\n//                   </div>\n//                 </Link>\n//                 <span>\n//                   <a onClick={() => this.refresh()}>\n//                     <div className=\"daftar2\">\n//                       <i className=\"fa fa-refresh\"></i>\n//                     </div>\n//                   </a>\n//                 </span>\n//             </div>\n//             <div className=\"isitabel\">\n//               <MDBDataTable\n//                 responsive\n//                 striped\n//                 bordered\n//                 small\n//                 hover\n//                 data={data}\n//               />\n//             </div>   \n//         </div>\n//         <div>\n            \n//         </div>\n//       </div>\n//     );\n//   }\n//   else{\n//     return (\n//       <div>  \n//         <div className=\"kotakfilter\"> \n//           <form className=\"kotakforminputlogpintu\" onSubmit={this.handleSubmit}>\n//             <div className=\"kotakinputlogpintuscardid\">\n//               <label> Scard ID </label> <br></br>\n//               <input name=\"scardID\" onChange={this.handleChange} className=\"inputformlogpintuscardid\" type=\"text\" placeholder=\"Scard Id\"></input>\n//             </div>\n            \n//             <div className=\"kotakinputlogpintutermid\">\n//               <label> Terminal ID </label> <br></br>\n//               <input name=\"terminalID\" onChange={this.handleChange} className=\"inputformlogpintutermid\" type=\"text\" placeholder=\"Terminal Id\"></input>\n//             </div>\n  \n//             <div className=\"kotakinputlogpintustart\">\n//               <label> Start Date </label> <br></br>\n//               <input name=\"startDate\" onChange={this.handleChange} className=\"inputformlogpintustart\" type=\"date\" ></input>\n//             </div> \n            \n//             <div className=\"kotakinputlogpintuend\">\n//               <label> End Date </label> <br></br>\n//               <input name=\"endDate\" onChange={this.handleChange} className=\"inputformlogpintuend\" type=\"date\"></input>\n//             </div>\n            \n//             <div className=\"kotaksubmitlogpintu2\">\n//               <input className=\"submitformlogpintu\" type=\"submit\" value=\"Filter\"></input>\n//             </div>\n//           </form> \n//         </div>   \n//         <div className=\"kotaktabellogpintu2\">\n//             <div className=\"isitabel\">\n//               <MDBDataTable\n//                 responsive\n//                 striped\n//                 bordered\n//                 small\n//                 hover\n//                 data={data}\n//               />\n//             </div>   \n//         </div>\n//       </div>\n//     );\n//   }\n\n  \n//   }\n}\n\nexport default withRouter(Logpintu);"]},"metadata":{},"sourceType":"module"}